diff --git a/libcpp/expr.c b/libcpp/expr.c
index 2ae9be0..e0748ee 100644
--- a/libcpp/expr.c
+++ b/libcpp/expr.c
@@ -793,16 +793,16 @@ cpp_classify_number (cpp_reader *pfile, const cpp_token *token,
       if ((result & CPP_N_WIDTH) == CPP_N_LARGE
 	  && CPP_OPTION (pfile, cpp_warn_long_long))
         {
-          const char *message = CPP_OPTION (pfile, cplusplus) 
-				? N_("use of C++11 long long integer constant")
-		                : N_("use of C99 long long integer constant");
-
 	  if (CPP_OPTION (pfile, c99))
             cpp_warning_with_line (pfile, CPP_W_LONG_LONG, virtual_location,
-				   0, message);
+				   0, CPP_OPTION (pfile, cplusplus) 
+                ? N_("use of C++11 long long integer constant")
+                        : N_("use of C99 long long integer constant"));
           else
             cpp_pedwarning_with_line (pfile, CPP_W_LONG_LONG,
-				      virtual_location, 0, message);
+				      virtual_location, 0, CPP_OPTION (pfile, cplusplus) 
+                ? N_("use of C++11 long long integer constant")
+                        : N_("use of C99 long long integer constant"));
         }
 
       result |= CPP_N_INTEGER;
diff --git a/libcpp/macro.c b/libcpp/macro.c
index 2573f31..12124d9 100644
--- a/libcpp/macro.c
+++ b/libcpp/macro.c
@@ -90,9 +90,6 @@ struct macro_arg_saved_data {
   node_type type;
 };
 
-static const char *vaopt_paste_error =
-  N_("'##' cannot appear at either end of __VA_OPT__");
-
 static void expand_arg (cpp_reader *, macro_arg *);
 
 /* A class for tracking __VA_OPT__ state while iterating over a
@@ -181,7 +178,7 @@ class vaopt_state {
 	if (m_state == 2 && token->type == CPP_PASTE)
 	  {
 	    cpp_error_at (m_pfile, CPP_DL_ERROR, token->src_loc,
-			  vaopt_paste_error);
+			  "'##' cannot appear at either end of __VA_OPT__");
 	    return ERROR;
 	  }
 	/* Advance states before further considering this token, in
@@ -210,7 +207,7 @@ class vaopt_state {
 		if (was_paste)
 		  {
 		    cpp_error_at (m_pfile, CPP_DL_ERROR, token->src_loc,
-				  vaopt_paste_error);
+				  "'##' cannot appear at either end of __VA_OPT__");
 		    return ERROR;
 		  }
 
@@ -3361,8 +3358,6 @@ static cpp_macro *
 create_iso_definition (cpp_reader *pfile)
 {
   bool following_paste_op = false;
-  const char *paste_op_error_msg =
-    N_("'##' cannot appear at either end of a macro expansion");
   unsigned int num_extra_tokens = 0;
   unsigned nparms = 0;
   cpp_hashnode **params = NULL;
@@ -3487,7 +3482,8 @@ create_iso_definition (cpp_reader *pfile)
 	     function-like macros, but not at the end.  */
 	  if (following_paste_op)
 	    {
-	      cpp_error (pfile, CPP_DL_ERROR, paste_op_error_msg);
+	      cpp_error (pfile, CPP_DL_ERROR,
+            "'##' cannot appear at either end of a macro expansion");
 	      goto out;
 	    }
 	  if (!vaopt_tracker.completed ())
@@ -3502,7 +3498,8 @@ create_iso_definition (cpp_reader *pfile)
 	     function-like macros, but not at the beginning.  */
 	  if (macro->count == 1)
 	    {
-	      cpp_error (pfile, CPP_DL_ERROR, paste_op_error_msg);
+	      cpp_error (pfile, CPP_DL_ERROR,
+            "'##' cannot appear at either end of a macro expansion");
 	      goto out;
 	    }
 
